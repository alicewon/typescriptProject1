{"version":3,"sources":["index.ts"],"names":["isOpen","myName","age","list","me","Job","job","WebDev","phone","tablet","sayWord","word","otherStuff","_i","arguments","length","console","log","newName","newNameTwo","makeMargin","x","dog","undefined","sayName","_a","name","printLable","labeledObj","label","myObj","size","Type2","createContent2","contentType","Video","Quiz"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,SAAS,KAAb;AACA,IAAIC,SAAS,OAAb;AACA,IAAIC,MAAM,EAAV;AACA,IAAIC,OAAO,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAX;AACA;AACA,IAAIC,KAAK,CAAC,OAAD,EAAU,EAAV,CAAT;AACA;AACA,IAAIC,GAAJ;AACA,CAAC,UAAUA,GAAV,EAAe;AACZA,QAAIA,IAAI,QAAJ,IAAgB,CAApB,IAAyB,QAAzB;AACAA,QAAIA,IAAI,aAAJ,IAAqB,CAAzB,IAA8B,aAA9B;AACAA,QAAIA,IAAI,IAAJ,IAAY,CAAhB,IAAqB,IAArB;AACH,CAJD,EAIGA,QAAQA,MAAM,EAAd,CAJH;AAKA,IAAIC,MAAMD,IAAIE,MAAd;AACA;AACA,IAAIC,QAAQ,OAAZ;AACA,IAAIC,SAAS,CAAb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,UAAU,SAAVA,OAAU,CAAUC,IAAV,EAAgB;AAC1B,QAAIA,SAAS,KAAK,CAAlB,EAAqB;AAAEA,eAAO,OAAP;AAAiB;AACxC,QAAIC,aAAa,EAAjB;AACA,SAAK,IAAIC,KAAK,CAAd,EAAiBA,KAAKC,UAAUC,MAAhC,EAAwCF,IAAxC,EAA8C;AAC1CD,mBAAWC,KAAK,CAAhB,IAAqBC,UAAUD,EAAV,CAArB;AACH;AACDG,YAAQC,GAAR,CAAYL,UAAZ;AACA,WAAOD,IAAP;AACH,CARD;AASAD,QAAQ,OAAR,EAAiB,KAAjB;AACA;AACA,IAAIQ,UAAU,OAAd;AACAA,UAAU,KAAV;AACA;AACA;AACAF,QAAQC,GAAR,CAAYC,OAAZ;AACA;AACA,IAAIC,aAAaD,OAAjB;AACA;AACA;AACA,IAAIE,aAAa,SAAbA,UAAa,CAAUC,CAAV,EAAa;AAC1B,WAAO,aAAaA,CAAb,GAAiB,IAAxB;AACH,CAFD;AAGAD,WAAW,EAAX;AACA;AACA,IAAIE,MAAM,OAAV;AACAA,MAAM,IAAN;AACAN,QAAQC,GAAR,CAAYK,GAAZ;AACAA,MAAM,MAAN;AACAA,MAAMC,SAAN;AACA,IAAIC,UAAU,SAAVA,OAAU,CAAUC,EAAV,EAAc;AACxB,QAAIC,OAAOD,GAAGC,IAAd;AAAA,QAAoBxB,MAAMuB,GAAGvB,GAA7B;AACAc,YAAQC,GAAR,CAAYS,IAAZ,EAAkBxB,GAAlB;AACA,WAAOwB,IAAP;AACH,CAJD;AAKA;AACA;AACA;AACA;AACAF,QAAQ;AACJtB,SAAK;AADD,CAAR;AAGA,SAASyB,UAAT,CAAoBC,UAApB,EAAgC;AAC5BZ,YAAQC,GAAR,CAAYW,WAAWC,KAAvB;AACH;AACD,IAAIC,QAAQ,EAAEC,MAAM,EAAR,EAAYF,OAAO,gBAAnB,EAAZ;AACAF,WAAWG,KAAX;AACA;AACA,IAAIE,KAAJ;AACA,CAAC,UAAUA,KAAV,EAAiB;AACdA,UAAM,OAAN,IAAiB,OAAjB;AACAA,UAAM,UAAN,IAAoB,WAApB;AACAA,UAAM,MAAN,IAAgB,MAAhB,CAHc,CAGU;AAC3B,CAJD,EAIGA,UAAUA,QAAQ,EAAlB,CAJH;AAKA,IAAIC,iBAAiB,SAAjBA,cAAiB,CAAUC,WAAV,EAAuB,CAAG,CAA/C;AACAD,eAAeD,MAAMG,KAArB;AACAnB,QAAQC,GAAR,CAAYe,MAAMI,IAAlB","file":"typescriptProject1.9fbc4c33.map","sourceRoot":"..","sourcesContent":["var isOpen = false;\nvar myName = 'alice';\nvar age = 30;\nvar list = [0, 1, 2, 3];\n// tuple: has to follow order of types declared\nvar me = [\"Alice\", 30];\n// enum\nvar Job;\n(function (Job) {\n    Job[Job[\"WebDev\"] = 0] = \"WebDev\";\n    Job[Job[\"WebDesigner\"] = 1] = \"WebDesigner\";\n    Job[Job[\"PM\"] = 2] = \"PM\";\n})(Job || (Job = {}));\nvar job = Job.WebDev;\n// any\nvar phone = \"Pixel\";\nvar tablet = 3;\n// never\n// undefined\n// null\n// Functions in TS\n// ? for optional params\n// const sayWord = (word?: string) :string => {\n//     console.log(word || \"Hello\")\n//     return word || \"Hello\"\n// }\n// sayWord()\n// default params\n// Rest params work as expected\nvar sayWord = function (word) {\n    if (word === void 0) { word = \"Hello\"; }\n    var otherStuff = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        otherStuff[_i - 1] = arguments[_i];\n    }\n    console.log(otherStuff);\n    return word;\n};\nsayWord(\"Scott\", \"Wes\");\n// Implicit types in TS\nvar newName = 'Scott';\nnewName = \"Wes\";\n// newName = 10\n// newName = false\nconsole.log(newName);\n// Inferring type from a variable, from INITIAL declaration, not the current value\nvar newNameTwo = newName;\n// newNameTwo = 11\n// Union Types with |\nvar makeMargin = function (x) {\n    return \"margin: \" + x + \"px\";\n};\nmakeMargin(10);\n//Null and Undefined types\nvar dog = \"sammy\";\ndog = null;\nconsole.log(dog);\ndog = \"Lucy\";\ndog = undefined;\nvar sayName = function (_a) {\n    var name = _a.name, age = _a.age;\n    console.log(name, age);\n    return name;\n};\n// sayName({\n//     name: \"Alice\", \n//     age: 32\n// })\nsayName({\n    age: 32,\n});\nfunction printLable(labeledObj) {\n    console.log(labeledObj.label);\n}\nvar myObj = { size: 10, label: \"Size 10 Object\" };\nprintLable(myObj);\n//Enumzzz - define a set of named constants, list of exact items\nvar Type2;\n(function (Type2) {\n    Type2[\"Video\"] = \"VIDEO\";\n    Type2[\"BlogPost\"] = \"BLOG_POST\";\n    Type2[\"Quiz\"] = \"QUIZ\"; // 2\n})(Type2 || (Type2 = {}));\nvar createContent2 = function (contentType) { };\ncreateContent2(Type2.Video);\nconsole.log(Type2.Quiz);\n"]}